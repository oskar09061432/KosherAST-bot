import os
import asyncio
from aiogram import Bot, Dispatcher, types
from aiogram.types import ReplyKeyboardMarkup, KeyboardButton
from aiogram.filters import CommandStart
import pandas as pd

API_TOKEN = os.getenv("API_TOKEN")

bot = Bot(token=API_TOKEN)
dp = Dispatcher()

# –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞
keyboard = ReplyKeyboardMarkup(
    keyboard=[
        [KeyboardButton(text="–ö–æ—à–µ—Ä–Ω—ã–π –ø—Ä–∞–π—Å-–ª–∏—Å—Ç")],
        [KeyboardButton(text="–û—Ç–≤–µ—Ç—ã –Ω–∞ –≤–æ–ø—Ä–æ—Å—ã")],
        [KeyboardButton(text="–°–≤—è–∑—å —Å –º–µ–Ω–µ–¥–∂–µ—Ä–æ–º")],
        [KeyboardButton(text="–ü—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è")],
        [KeyboardButton(text="–°–∞–π—Ç AST")],
    ],
    resize_keyboard=True
)

@dp.message(CommandStart())
async def cmd_start(message: types.Message):
    await message.answer(
        "–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å!\n"
        "–í—ã–±–µ—Ä–∏—Ç–µ, —á—Ç–æ –≤–∞—Å –∏–Ω—Ç–µ—Ä–µ—Å—É–µ—Ç üëá",
        reply_markup=keyboard
    )

@dp.message(lambda message: message.text == "–ö–æ—à–µ—Ä–Ω—ã–π –ø—Ä–∞–π—Å-–ª–∏—Å—Ç")
async def send_price_list(message: types.Message):
    await message.answer_document(open("c 1.02 –ø—Ä–∞–π—Å –ª–∏—Å—Ç 35.xlsx", "rb"))

@dp.message(lambda message: message.text == "–û—Ç–≤–µ—Ç—ã –Ω–∞ –≤–æ–ø—Ä–æ—Å—ã")
async def send_answers(message: types.Message):
    text = (
        "üì¶ *–í –∫–∞–∫–∏—Ö –ø—Ä–µ–¥–µ–ª–∞—Ö –¥–µ–π—Å—Ç–≤—É–µ—Ç –¥–æ—Å—Ç–∞–≤–∫–∞?*\n"
        "–î–æ—Å—Ç–∞–≤–∫–∞ –¥–µ–π—Å—Ç–≤—É–µ—Ç –≤ –ú–æ—Å–∫–≤–µ –∏ –≤ –ú–û.\n\n"
        "üí∏ *–°–∫–æ–ª—å–∫–æ —Å—Ç–æ–∏—Ç –¥–æ—Å—Ç–∞–≤–∫–∞?*\n"
        "–î–æ—Å—Ç–∞–≤–∫–∞ –±–µ—Å–ø–ª–∞—Ç–Ω–∞—è.\n\n"
        "üìÖ *–î–µ—Ç–∞–ª–∏ –∑–∞–∫–∞–∑–∞?*\n"
        "–ó–∞–∫–∞–∑—ã –Ω–∞ –∑–∞–≤—Ç—Ä–∞ –ø—Ä–∏–Ω–∏–º–∞–µ–º –¥–æ 16:00. –î–æ—Å—Ç–∞–≤–∫–∞ –≤–æ–∑–º–æ–∂–Ω–∞ –≤ –ª—é–±–æ–π –¥—Ä—É–≥–æ–π –¥–µ–Ω—å, –∫—Ä–æ–º–µ —Å—É–±–±–æ—Ç—ã –∏ –≤–æ—Å–∫—Ä–µ—Å–µ–Ω—å—è. –í –¥–µ–Ω—å –¥–æ—Å—Ç–∞–≤–∫–∏ –≤–∞–º –ø–æ–∑–≤–æ–Ω–∏—Ç –≤–æ–¥–∏—Ç–µ–ª—å –∏ —Å–æ–æ–±—â–∏—Ç –ø—Ä–∏–º–µ—Ä–Ω–æ–µ –≤—Ä–µ–º—è (–≤—ã –º–æ–∂–µ—Ç–µ –¥–æ–≥–æ–≤–æ—Ä–∏—Ç—å—Å—è, –µ—Å–ª–∏ –æ–Ω–æ –Ω–µ—É–¥–æ–±–Ω–æ).\n\n"
        "üí∞ *–ö–∞–∫ –æ–ø–ª–∞—á–∏–≤–∞—Ç—å?*\n"
        "–û–ø–ª–∞—Ç–∞ —Å—Ç—Ä–æ–≥–æ –Ω–∞–ª–∏—á–Ω—ã–º–∏ –≤ —Ä—É–∫–∏ –≤–æ–¥–∏—Ç–µ–ª—é (–ª—É—á—à–µ –±–µ–∑ —Å–¥–∞—á–∏)."
    )
    await message.answer(text, parse_mode="Markdown")

@dp.message(lambda message: message.text == "–°–≤—è–∑—å —Å –º–µ–Ω–µ–¥–∂–µ—Ä–æ–º")
async def contact_manager(message: types.Message):
    await message.answer("–°–≤—è–∑–∞—Ç—å—Å—è —Å –º–µ–Ω–µ–¥–∂–µ—Ä–æ–º: 8-925-178-77-09")

@dp.message(lambda message: message.text == "–ü—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è")
async def handle_proposals(message: types.Message):
    await message.answer("–ü–∏—à–∏—Ç–µ —Å–≤–æ–∏ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è, —á–µ–≥–æ –≤—ã –µ—â–µ —Ö–æ—Ç–µ–ª–∏ –±—ã –≤–∏–¥–µ—Ç—å –≤ –±–æ—Ç–µ, –∫–∞–∫–æ–π –∞—Å—Å–æ—Ä—Ç–∏–º–µ–Ω—Ç –¥–æ–±–∞–≤–∏—Ç—å?")

@dp.message(lambda message: message.text == "–°–∞–π—Ç AST")
async def send_site(message: types.Message):
    await message.answer("–¢—É—Ç –≤—ã –º–æ–∂–µ—Ç–µ –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –æ —Ç–æ–≤–∞—Ä–µ —Å –∫–∞—Ä—Ç–∏–Ω–∫–∞–º–∏:\nhttps://www.ast-inter.ru/")

async def main():
    await dp.start_polling(bot)

if __name__ == "__main__":
    asyncio.run(main())
